@model List<DMS.Models.DocumentDetailsModel>

@{
    ViewData["Title"] = "Rejected Documents";
}

<h2 class="text-center fw-bold text-primary mb-4">
    <i class="bi bi-file-earmark-text me-2"></i> Rejected Documents
</h2>

<div class="d-flex justify-content-between align-items-center mb-2 small">
    <div class="d-flex align-items-center">
        <span class="me-1">Show</span>
        <select id="rowsPerPage" class="form-select form-select-sm" style="width:auto;">
            <option value="5">5</option>
            <option value="10" selected>10</option>
            <option value="25">25</option>
            <option value="50">50</option>
            <option value="100">100</option>
        </select>
        <span class="ms-1">entries</span>
    </div>
    <div style="position: relative; width: 220px;">
        <input type="text"
               id="documentSearch"
               class="form-control form-control-sm ps-5"
               placeholder="Search..."
               autocomplete="off"
               style="border-radius: 20px;">
        <span style="position: absolute; left: 12px; top: 50%; transform: translateY(-50%); color: #888; font-size:0.9rem;">
            <i class="bi bi-search"></i>
        </span>
    </div>
</div>

<div id="noDataMessage" class="alert alert-info small" role="alert" style="display:none;">
    No rejected documents found.
</div>

<div id="tableContainer">
    <div class="table-responsive" style="overflow-x:auto;">
        <table id="rejectedDocumentsTable" class="table table-bordered table-hover table-sm align-middle text-center">
            <thead class="table-primary small">
                <tr>
                    <th class="text-start text-nowrap sortable" data-col="Description">Document Description <span class="sort-indicator"></span></th>
                    <th class="text-start text-nowrap sortable" data-col="CreatedOn">Created On <span class="sort-indicator"></span></th>
                    <th class="text-start text-nowrap sortable" data-col="Notes">Notes <span class="sort-indicator"></span></th>
                    <th class="text-start text-nowrap">Action</th>
                </tr>
            </thead>
            <tbody id="rejectedDocumentsTableBody">
            </tbody>
        </table>
    </div>

    <!-- Pagination Controls -->
    <div class="pagination-container bg-white border rounded shadow-sm py-2 px-3 mt-2 small">
        <div class="d-flex justify-content-between align-items-center">
            <div class="pagination-info">
                Showing <span id="startRecord">0</span> to <span id="endRecord">0</span> of <span id="totalRecords">0</span> entries
            </div>
            <nav aria-label="Document pagination">
                <ul class="pagination pagination-sm mb-0" id="paginationList"></ul>
            </nav>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <style>
        th.sortable {
            cursor: pointer;
            user-select: none;
            position: relative;
            padding-right: 25px !important;
        }

        .sort-indicator {
            position: absolute;
            right: 8px;
            top: 50%;
            transform: translateY(-50%);
            font-size: 0.8em;
            color: #007bff;
        }

        th.sortable:hover {
            background: #e3f2fd;
        }

        th.sorted-asc .sort-indicator::after {
            content: '▲';
            font-size: 0.7em;
        }

        th.sorted-desc .sort-indicator::after {
            content: '▼';
            font-size: 0.7em;
        }

        th.sortable:not(.sorted-asc):not(.sorted-desc) .sort-indicator::after {
            content: '⇅';
            opacity: 0.5;
        }

        .pagination-info {
            font-size: 0.85rem;
            color: #6c757d;
        }
    </style>

    <script>
        $(function () {
            let currentPage = 1;
            let rowsPerPage = 10;
            let searchTerm = '';
            let sortColumn = '';
            let sortDirection = 'asc';
            let searchTimeout = null;

            function loadDocuments() {
                $.ajax({
                    url: '@Url.Action("DetailsWithNotes", "Document")',
                    type: 'GET',
                    data: {
                        page: currentPage,
                        pageSize: rowsPerPage,
                        searchTerm: searchTerm,
                        sortColumn: sortColumn,
                        sortDirection: sortDirection
                    },
                    success: function (response) {
                        updateTable(response);
                    },
                    error: function () {
                        alert('Error loading documents');
                    }
                });
            }

            function updateTable(response) {
                const $tbody = $('#rejectedDocumentsTableBody');
                $tbody.empty();

                if (response.documents.length === 0) {
                    $('#tableContainer').hide();
                    $('#noDataMessage').show();
                } else {
                    $('#tableContainer').show();
                    $('#noDataMessage').hide();

                    response.documents.forEach(function (doc) {
                        const createdDate = new Date(doc.createdOn);
                        const formattedDate = formatDate(createdDate);

                        const row = `
                            <tr>
                                <td class="text-start">${doc.description}</td>
                                <td class="text-start text-nowrap">${formattedDate}</td>
                                <td class="text-start text-nowrap">${doc.notes || ''}</td>
                                <td class="text-start text-nowrap">
                                    <div class="d-flex justify-content-center gap-1">
                                        <a href="/Document/ViewDocument?documentDetailId=${doc.id}" class="btn btn-info btn-sm" target="_blank" title="View Document">
                                            <i class="bi bi-eye-fill"></i>
                                        </a>
                                        <a href="/Document/DownloadDocument?documentDetailId=${doc.id}" class="btn btn-secondary btn-sm" title="Download Document">
                                            <i class="bi bi-download"></i>
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        `;
                        $tbody.append(row);
                    });
                }

                updatePaginationInfo(response);
            }

            function formatDate(date) {
                const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
                const day = String(date.getDate()).padStart(2, '0');
                const month = months[date.getMonth()];
                const year = String(date.getFullYear()).slice(-2);
                return `${day} ${month}. ${year}`;
            }

            function updatePaginationInfo(response) {
                const startRecord = response.totalRecords === 0 ? 0 : (currentPage - 1) * rowsPerPage + 1;
                const endRecord = Math.min(currentPage * rowsPerPage, response.totalRecords);

                $('#startRecord').text(startRecord);
                $('#endRecord').text(endRecord);
                $('#totalRecords').text(response.totalRecords);

                updatePaginationControls(response.totalPages);
            }

            function updatePaginationControls(totalPages) {
                const $pagination = $('#paginationList');
                $pagination.empty();

                const isFirstPage = currentPage === 1;
                const isLastPage = currentPage === totalPages || totalPages === 0;

                let html = `<li class="page-item ${isFirstPage?'disabled':''}"><a class="page-link" href="#" data-action="first">First</a></li>
                            <li class="page-item ${isFirstPage?'disabled':''}"><a class="page-link" href="#" data-action="prev">Previous</a></li>`;

                for(let i=1; i<=totalPages; i++){
                    if(i===1 || i===totalPages || (i>=currentPage-1 && i<=currentPage+1)) {
                        html += `<li class="page-item ${i===currentPage?'active':''}"><a class="page-link" href="#" data-page="${i}">${i}</a></li>`;
                    } else if(i===currentPage-2 || i===currentPage+2) {
                        html += `<li class="page-item disabled"><a class="page-link" href="#">...</a></li>`;
                    }
                }

                html += `<li class="page-item ${isLastPage?'disabled':''}"><a class="page-link" href="#" data-action="next">Next</a></li>
                         <li class="page-item ${isLastPage?'disabled':''}"><a class="page-link" href="#" data-action="last">Last</a></li>`;

                $pagination.html(html);
            }

            $('#rowsPerPage').on('change', function () {
                rowsPerPage = parseInt($(this).val()) || 10;
                currentPage = 1;
                loadDocuments();
            });

            $('#documentSearch').on('input', function () {
                clearTimeout(searchTimeout);
                searchTerm = $(this).val().trim();
                searchTimeout = setTimeout(function () {
                    currentPage = 1;
                    loadDocuments();
                }, 500);
            });

            $(document).on('click', 'th.sortable', function () {
                const col = $(this).data('col');

                if (sortColumn === col) {
                    sortDirection = sortDirection === 'asc' ? 'desc' : 'asc';
                } else {
                    sortColumn = col;
                    sortDirection = 'asc';
                }

                $('.sortable').removeClass('sorted-asc sorted-desc');
                $(this).addClass(sortDirection === 'asc' ? 'sorted-asc' : 'sorted-desc');

                currentPage = 1;
                loadDocuments();
            });

            $(document).on('click', '.pagination a.page-link', function (e) {
                e.preventDefault();
                const $a = $(this);
                const action = $a.data('action');
                const page = $a.data('page');
                const totalPages = Math.ceil($('#totalRecords').text() / rowsPerPage) || 1;

                if(action === 'first') { currentPage = 1; loadDocuments(); }
                else if(action === 'prev') { if(currentPage > 1) { currentPage--; loadDocuments(); } }
                else if(action === 'next') { if(currentPage < totalPages) { currentPage++; loadDocuments(); } }
                else if(action === 'last') { currentPage = totalPages; loadDocuments(); }
                else if(page) { currentPage = parseInt(page); loadDocuments(); }
            });

            loadDocuments();
        });
    </script>
}