@model List<DMS_Final.Models.DocumentModel>
@{
    ViewBag.Title = "My Documents";
}

<div class="d-flex justify-content-between align-items-center mb-4 px-2 py-2 bg-light rounded shadow-sm">
    <h2 class="fw-bold text-primary mb-0">
        <i class="bi bi-folder2-open me-2"></i> My Documents
    </h2>
    <a asp-action="UploadDocument" asp-controller="Document" class="btn btn-success d-flex align-items-center gap-2">
        <i class="bi bi-plus-circle-fill"></i>
        <span>New Document</span>
    </a>
</div>

<div class="d-flex justify-content-end mb-3">
    <div style="position: relative; width: 250px;">
        <input type="text"
               id="documentSearch"
               class="form-control ps-5"
               placeholder="Search..."
               autocomplete="off"
               style="border-radius: 20px;">
        <span style="position: absolute; left: 15px; top: 50%; transform: translateY(-50%); color: #888;">
            <i class="bi bi-search"></i>
        </span>
    </div>
</div>

@if (Model == null || !Model.Any())
{
    <div class="alert alert-info" role="alert">
        You have not uploaded any documents yet.
    </div>
}
else
{
    <div class="table-responsive" style="overflow-x: auto;">
        <table id="documentsTable" class="table table-hover table-bordered table-striped">
            <thead class="table-primary">
                <tr>
                    <th class="text-center text-nowrap sortable" data-col="0" data-type="text">Title <span class="sort-indicator"></span></th>
                    <th class="text-center text-nowrap sortable" data-col="1" data-type="text">Description <span class="sort-indicator"></span></th>
                    <th class="text-center text-nowrap">Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var doc in Model)
                {
                    <tr>
                        <td class="text-center text-nowrap" data-sort-value="@doc.Title.ToLower()">@doc.Title</td>
                        <td class="text-center" data-sort-value="@doc.Description.ToLower()">@doc.Description</td>
                        <td class="text-center text-nowrap">
                            <div class="d-flex justify-content-center gap-2">
                                <a asp-action="EditDocument" asp-controller="Document" asp-route-documentId="@doc.Id" class="btn btn-info btn-sm" title="Quick Edit">
                                    <i class="bi bi-file-earmark-text-fill"></i>
                                </a>
                                <a asp-action="EditDocumentFull" asp-controller="Document" asp-route-documentId="@doc.Id" class="btn btn-secondary btn-sm" title="Full Edit">
                                    <i class="bi bi-pencil-square"></i>
                                </a>
                                <a asp-action="DocumentVersionHistory" asp-controller="Document" asp-route-documentId="@doc.Id" class="btn btn-warning btn-sm" title="Version History">
                                    <i class="bi bi-clock-history"></i>
                                </a>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <style>
        th.sortable {
            cursor: pointer;
            user-select: none;
            position: relative;
            padding-right: 25px !important;
        }

        .sort-indicator {
            position: absolute;
            right: 8px;
            top: 50%;
            transform: translateY(-50%);
            font-size: 0.8em;
            color: #007bff;
        }

        th.sortable:hover {
            background: #e3f2fd;
        }

        th.sorted-asc .sort-indicator::after {
            content: 'A-Z';
            font-size: 0.7em;
        }

        th.sorted-desc .sort-indicator::after {
            content: 'Z-A';
            font-size: 0.7em;
        }

        th.sortable:not(.sorted-asc):not(.sorted-desc) .sort-indicator::after {
            content: '⇅';
            opacity: 0.5;
        }
    </style>
    <script>
        $(function () {
            // Real-time search: Title and Description columns
            $('#documentSearch').on('input', function () {
                var search = $(this).val().toLowerCase();
                $('#documentsTable tbody tr').each(function () {
                    var title = $(this).find('td').eq(0).text().toLowerCase();
                    var description = $(this).find('td').eq(1).text().toLowerCase();
                    $(this).toggle(title.includes(search) || description.includes(search));
                });
            });

            // Sorting UI and logic
            let lastSortedCol = null;
            let asc = true;

            $('.sortable').on('click', function () {
                var col = $(this).data('col');
                var colType = $(this).data('type');
                var rows = $('#documentsTable tbody tr').get();

                // Toggle sort direction if same column clicked
                if (lastSortedCol === col) {
                    asc = !asc;
                } else {
                    asc = true;
                }

                // Update UI classes
                $('.sortable').removeClass('sorted-asc sorted-desc');
                $(this).addClass(asc ? 'sorted-asc' : 'sorted-desc');

                rows.sort(function (a, b) {
                    var valA = $(a).find('td').eq(col).data('sort-value');
                    var valB = $(b).find('td').eq(col).data('sort-value');

                    // If data-sort-value is not available, use text content
                    if (valA === undefined || valA === null) valA = $(a).find('td').eq(col).text();
                    if (valB === undefined || valB === null) valB = $(b).find('td').eq(col).text();

                    // Text sorting (A-Z / Z-A)
                    valA = valA.toString().toLowerCase();
                    valB = valB.toString().toLowerCase();

                    if (valA < valB) return asc ? -1 : 1;
                    if (valA > valB) return asc ? 1 : -1;
                    return 0;
                });

                $.each(rows, function (index, row) {
                    $('#documentsTable tbody').append(row);
                });

                lastSortedCol = col;
            });
        });
    </script>
}