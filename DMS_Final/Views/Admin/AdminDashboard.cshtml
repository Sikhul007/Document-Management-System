@{
    ViewData["Title"] = "Admin Dashboard";
    var documentCount = ViewBag.DocumentDetailsCount;
    var pendingDocumentCount = ViewBag.DocumentpendingDetailsCount;
    var approvedDocumentCount = ViewBag.DocumentapprovedDetailsCount;
    var activeUserCount = ViewBag.ActiveUserCount;
    var userName = ViewBag.UserName as string;
    var loginTime = ViewBag.LoginTime != null
        ? DateTime.Parse(ViewBag.LoginTime.ToString()).ToString("dd MMM yyyy, hh:mm tt")
        : "";

    var unreadNotificationCount = ViewBag.UnreadNotificationCount ?? 0;
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="h3 mb-0 text-gray-800">Admin Dashboard</h1>
            <p class="mb-0 text-muted">Welcome back, @userName!</p>
        </div>
        <div class="d-flex align-items-center">
            <div class="me-3 text-end">
                <div id="currentDate" class="fw-bold"></div>
                <div id="loginDateTime">
                    <span class="fw-bold">Login Time:</span> @loginTime
                </div>
            </div>
            <div class="position-relative dropdown">
                <a href="#" id="notificationDropdown" data-bs-toggle="dropdown" aria-expanded="false" style="text-decoration:none;">
                    <i class="bi bi-bell fs-4 text-primary"></i>
                    <span id="notificationCount"
                          class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger @(ViewBag.UnreadNotificationCount > 0 ? "" : "d-none")">
                        @ViewBag.UnreadNotificationCount
                    </span>
                </a>
                <ul id="notificationList"
                    class="dropdown-menu dropdown-menu-end shadow"
                    aria-labelledby="notificationDropdown"
                    style="width: 400px; max-height: 400px; overflow-y: auto; overflow-x: hidden;">
                    @if (ViewBag.RecentNotifications is List<DMS_Final.Models.NotificationModel> notifs && notifs.Any())
                    {
                        foreach (var n in notifs)
                        {
                            <li class="dropdown-item @(n.IsRead ? "" : "fw-bold")" style="white-space: normal; word-break: break-word;">
                                <div style="font-size: 0.85rem;">@n.Message</div>
                                <small class="text-muted">@n.CreatedOn.ToString("g")</small>
                            </li>
                        }
                    }
                    else
                    {
                        <li class="dropdown-item text-muted" style="white-space: normal;">No notifications found</li>
                    }
                </ul>
            </div>
        </div>
    </div>

    <!-- Rest of the code remains unchanged -->
    <div class="row mb-4">
        <!-- All Documents -->
        <div class="col-xl-3 col-md-6 mb-4">
            <a asp-controller="Document" asp-action="AllDocuments" style="text-decoration: none; color: inherit;">
                <div class="card shadow h-100 py-2" style="border-left: 0.25rem solid #343a40;">
                    <div class="card-body">
                        <div class="row no-gutters align-items-center">
                            <div class="col mr-2">
                                <div class="text-xs font-weight-bold text-dark text-uppercase mb-1">All Documents</div>
                                <div class="h5 mb-0 font-weight-bold text-dark">@documentCount</div>
                            </div>
                            <div class="col-auto">
                                <i class="bi bi-files fs-2 text-dark"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </a>
        </div>

        <!-- Approved Documents -->
        <div class="col-xl-3 col-md-6 mb-4">
            <a asp-controller="Document" asp-action="AllDocuments" style="text-decoration: none; color: inherit;">
                <div class="card shadow h-100 py-2" style="border-left: 0.25rem solid #28a745;">
                    <div class="card-body">
                        <div class="row no-gutters align-items-center">
                            <div class="col mr-2">
                                <div class="text-xs font-weight-bold text-success text-uppercase mb-1">Approved Documents</div>
                                <div class="h5 mb-0 font-weight-bold text-success">@approvedDocumentCount</div>
                            </div>
                            <div class="col-auto">
                                <i class="bi bi-file-earmark-check fs-2 text-success"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </a>
        </div>

        <!-- Pending Review -->
        <div class="col-xl-3 col-md-6 mb-4">
            <a asp-controller="Document" asp-action="PendingDocuments" style="text-decoration: none; color: inherit;">
                <div class="card shadow h-100 py-2" style="border-left: 0.25rem solid #ffc107;">
                    <div class="card-body">
                        <div class="row no-gutters align-items-center">
                            <div class="col mr-2">
                                <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">Pending Review</div>
                                <div class="h5 mb-0 font-weight-bold text-warning">@pendingDocumentCount</div>
                            </div>
                            <div class="col-auto">
                                <i class="bi bi-hourglass-split fs-2 text-warning"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </a>
        </div>

        <!-- Total Users -->
        <div class="col-xl-3 col-md-6 mb-4">
            <a asp-controller="Admin" asp-action="GetAllUsers" style="text-decoration: none; color: inherit;">
                <div class="card shadow h-100 py-2" style="border-left: 0.25rem solid #17a2b8;">
                    <div class="card-body">
                        <div class="row no-gutters align-items-center">
                            <div class="col mr-2">
                                <div class="text-xs font-weight-bold text-info text-uppercase mb-1">Total Users</div>
                                <div class="h5 mb-0 font-weight-bold text-info">@activeUserCount</div>
                            </div>
                            <div class="col-auto">
                                <i class="bi bi-people fs-2 text-info"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </a>
        </div>
    </div>
</div>

<!-- Charts Row -->
<div class="row mb-4">
    <!-- Document Status Chart -->
    <div class="col-xl-8 col-lg-7">
        <div class="card shadow mb-4">
            <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                <h6 class="m-0 font-weight-bold text-primary">Document Status Overview</h6>
                <div class="dropdown no-arrow">
                    @* <a class="dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-bs-toggle="dropdown" aria-expanded="false">
                        <i class="bi bi-three-dots-vertical fs-5 text-gray-400"></i>
                    </a> *@

                    <ul class="dropdown-menu dropdown-menu-right shadow animated--fade-in" aria-labelledby="dropdownMenuLink">
                        <li><a class="dropdown-item" href="#">View Details</a></li>
                        <li><a class="dropdown-item" href="#">Export Data</a></li>
                        <li><hr class="dropdown-divider"></li>
                        <li><a class="dropdown-item" href="#">Refresh</a></li>
                    </ul>
                </div>
            </div>
            <div class="card-body">
                <div class="chart-area" style="height: 300px;">
                    <canvas id="documentStatusChart"></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- Recent Activity -->
    <div class="col-xl-4 col-lg-5">
        <div class="card shadow mb-4">
            <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                <h6 class="m-0 font-weight-bold text-primary">Recent Activity</h6>
                @* <div class="dropdown no-arrow">
                    <a class="dropdown-toggle" href="#" role="button" id="dropdownMenuLink2" data-bs-toggle="dropdown" aria-expanded="false">
                        <i class="bi bi-three-dots-vertical fs-5 text-gray-400"></i>
                    </a> 
                    <ul class="dropdown-menu dropdown-menu-right shadow animated--fade-in" aria-labelledby="dropdownMenuLink2">
                        <li><a class="dropdown-item" href="#">View All</a></li>
                        <li><a class="dropdown-item" href="#">Mark as Read</a></li>
                    </ul>
                </div> *@
            </div>
            <div class="card-body">
                <div class="list-group">
                    @if (ViewBag.RecentActivities is IEnumerable<(DMS_Final.Models.DocumentStatusHistoryModel History, string Title, string OriginalFileName)> activities && activities.Any())
                    {
                        foreach (var act in activities)
                        {
                            <div class="list-group-item list-group-item-action">
                                <div class="d-flex w-100 justify-content-between">
                                    <h6 class="mb-1">
                                        @act.History.Notes
                                    </h6>
                                    <small class="text-muted">@act.History.CreatedOn.ToString("g")</small>
                                </div>
                                <p class="mb-1">
                                    <span class="fw-bold">@act.History.CreatedBy</span>
                                    - Status:
                                    <span class="badge @(
                                          act.History.ApproveStatus.ToLower() == "approved" ? "bg-success" :
                                          act.History.ApproveStatus.ToLower() == "pending" ? "bg-warning text-dark" :
                                          act.History.ApproveStatus.ToLower() == "rejected" ? "bg-danger" :
                                          "bg-secondary"
                                                                        )">
                                @act.History.ApproveStatus
                            </span>
                            - Title: <span class="text-primary">@act.Title</span>
                            - File Name: <span class="text-info">@act.OriginalFileName</span>
                        </p>
                    </div>
                                        }
                    }
                    else
                    {
                        <div class="list-group-item text-muted">No recent activities found.</div>
                    }
                </div>
                <div class="text-center mt-3">
                    <a href="@Url.Action("ShowHistory", "DocumentStatusHistory")" class="btn btn-sm btn-primary">View All Activity</a>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Documents Table -->
<div class="card shadow mb-4">
    <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
        <h6 class="m-0 font-weight-bold text-primary">Recent Documents</h6>
        <div class="d-flex">
            <div class="input-group me-2" style="width: 250px;">
                <div class="input-group-append">
                </div>
            </div>
            <a asp-action="UploadDocument" asp-controller="Document" class="btn btn-sm btn-primary">
                <i class="bi bi-plus-circle me-1"></i> New Document
            </a>
        </div>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                <thead>
                    <tr>
                        <th>File Name</th>
                        <th>Uploaded By</th>
                        <th>Date</th>
                        <th>Status</th>
                    </tr>
                </thead>
                <tbody>
                    @if (ViewBag.RecentDocuments is List<DMS_Final.Models.DocumentDetailsModel> recentDocs && recentDocs.Any())
                    {
                        foreach (var doc in recentDocs)
                        {
                            <tr>
                                <td style="max-width: 220px; word-break: break-all; white-space: normal;">
                                    @doc.OriginalFileName
                                </td>
                                <td>@doc.CreatedBy</td>
                                <td>@doc.CreatedOn.ToString("dd MMM. yy")</td>
                                <td>
                                    @if (doc.ApproveStatus == "approved")
                                    {
                                        <span class="badge bg-success">Approved</span>
                                    }
                                    else if (doc.ApproveStatus == "pending")
                                    {
                                        <span class="badge bg-warning text-dark">Pending</span>
                                    }
                                    else if (doc.ApproveStatus == "rejected")
                                    {
                                        <span class="badge bg-danger">Rejected</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-secondary">@doc.ApproveStatus</span>
                                    }
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="5" class="text-center text-muted">No recent documents found.</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@{
    var monthlyPending = ViewBag.MonthlyPending as List<(int Year, int Month, int Count)>;
    var monthlyApproved = ViewBag.MonthlyApproved as List<(int Year, int Month, int Count)>;
    var monthlyRejected = ViewBag.MonthlyRejected as List<(int Year, int Month, int Count)>;

    // Get all months present in any dataset
    var months = monthlyPending?.Select(x => (x.Year, x.Month))
        .Union(monthlyApproved?.Select(x => (x.Year, x.Month)) ?? Enumerable.Empty<(int, int)>())
        .Union(monthlyRejected?.Select(x => (x.Year, x.Month)) ?? Enumerable.Empty<(int, int)>())
        .Distinct()
        .OrderBy(x => x.Year).ThenBy(x => x.Month)
        .ToList() ?? new List<(int, int)>();

    var monthLabels = months.Select(m => $"{System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetAbbreviatedMonthName(m.Month)} {m.Year}").ToList();
    var pendingData = months.Select(m => monthlyPending?.FirstOrDefault(x => x.Year == m.Year && x.Month == m.Month).Count ?? 0).ToList();
    var approvedData = months.Select(m => monthlyApproved?.FirstOrDefault(x => x.Year == m.Year && x.Month == m.Month).Count ?? 0).ToList();
    var rejectedData = months.Select(m => monthlyRejected?.FirstOrDefault(x => x.Year == m.Year && x.Month == m.Month).Count ?? 0).ToList();
}

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        const monthLabels = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(monthLabels));
        const approvedData = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(approvedData));
        const pendingData = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(pendingData));
        const rejectedData = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(rejectedData));

        const ctx = document.getElementById('documentStatusChart').getContext('2d');
        const documentStatusChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: monthLabels,
                datasets: [
                    {
                        label: 'Approved',
                        data: approvedData,
                        backgroundColor: 'rgba(40, 167, 69, 0.8)',
                        borderColor: 'rgba(40, 167, 69, 1)',
                        borderWidth: 1
                    },
                    {
                        label: 'Pending',
                        data: pendingData,
                        backgroundColor: 'rgba(255, 193, 7, 0.8)',
                        borderColor: 'rgba(255, 193, 7, 1)',
                        borderWidth: 1
                    },
                    {
                        label: 'Rejected',
                        data: rejectedData,
                        backgroundColor: 'rgba(220, 53, 69, 0.8)',
                        borderColor: 'rgba(220, 53, 69, 1)',
                        borderWidth: 1
                    }
                ]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    y: {
                        beginAtZero: true,
                        title: {
                            display: true,
                            text: 'Number of Documents'
                        }
                    },
                    x: {
                        title: {
                            display: true,
                            text: 'Month'
                        }
                    }
                },
                plugins: {
                    legend: {
                        position: 'top',
                    },
                    title: {
                        display: false,
                        text: 'Document Status by Month'
                    }
                }

            }

        });
        function updateDateTime() {
            const now = new Date();
            const dateOptions = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };
            const timeOptions = { hour: '2-digit', minute: '2-digit' };

            document.getElementById('currentDate').textContent = now.toLocaleDateString(undefined, dateOptions);
            document.getElementById('currentTime').textContent = now.toLocaleTimeString(undefined, timeOptions);
        }

        updateDateTime();
        setInterval(updateDateTime, 60000); // Update every minute
    </script>
    <script>
        $(document).ready(function () {
            $('#notificationDropdown').on('click', function () {
                $.get('/Notification/GetUserNotifications', function (data) {
                    let list = $('#notificationList');
                    list.empty();

                    if (data.length === 0) {
                        list.append('<li class="dropdown-item text-muted" style="white-space: normal;">No notifications found</li>');
                    } else {
                        data.forEach(n => {
                            list.append(`
                                <li class="dropdown-item ${n.isRead ? '' : 'fw-bold'}" style="white-space: normal; word-break: break-word;">
                                    <div style="font-size: 0.85rem;">${n.message}</div>
                                    <small class="text-muted">${new Date(n.createdOn).toLocaleString()}</small>
                                </li>
                            `);
                        });
                    }

                    // Mark as read in backend
                    $.post('/Notification/MarkNotificationsAsRead', function () {
                        // Clear the badge immediately in frontend
                        $('#notificationCount').addClass('d-none').text('');
                    });
                });
            });
        });
    </script>
}